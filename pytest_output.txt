============================= test session starts =============================
platform win32 -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0 -- C:\Users\ogsvn\.python\Dev\django-sprint4\venv\Scripts\python.exe
django: version: 5.1.1, settings: blogicum.settings (from ini)
rootdir: C:\Users\ogsvn\.python\Dev\django-sprint4
configfile: pytest.ini
testpaths: tests/
plugins: Faker-12.0.1, django-4.9.0
collecting ... collected 26 items

tests/test_content.py::TestContent::test_unpublished Operations to perform:
  Synchronize unmigrated apps: django_bootstrap5, messages, pages, staticfiles
  Apply all migrations: admin, auth, blog, contenttypes, sessions
Running pre-migrate handlers for application admin
Running pre-migrate handlers for application auth
Running pre-migrate handlers for application contenttypes
Running pre-migrate handlers for application sessions
Running pre-migrate handlers for application blog
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK (0.016s)
  Applying auth.0001_initial... OK (0.000s)
  Applying admin.0001_initial... OK (0.016s)
  Applying admin.0002_logentry_remove_auto_add... OK (0.000s)
  Applying admin.0003_logentry_add_action_flag_choices... OK (0.000s)
  Applying contenttypes.0002_remove_content_type_name... OK (0.015s)
  Applying auth.0002_alter_permission_name_max_length... OK (0.016s)
  Applying auth.0003_alter_user_email_max_length... OK (0.000s)
  Applying auth.0004_alter_user_username_opts... OK (0.000s)
  Applying auth.0005_alter_user_last_login_null... OK (0.015s)
  Applying auth.0006_require_contenttypes_0002... OK (0.000s)
  Applying auth.0007_alter_validators_add_error_messages... OK (0.000s)
  Applying auth.0008_alter_user_username_max_length... OK (0.016s)
  Applying auth.0009_alter_user_last_name_max_length... OK (0.000s)
  Applying auth.0010_alter_group_name_max_length... OK (0.000s)
  Applying auth.0011_update_proxy_permissions... OK (0.016s)
  Applying auth.0012_alter_user_first_name_max_length... OK (0.000s)
  Applying blog.0001_initial... OK (0.015s)
  Applying sessions.0001_initial... OK (0.000s)
Running post-migrate handlers for application admin
Adding content type 'admin | logentry'
Adding permission 'Permission object (1)'
Adding permission 'Permission object (2)'
Adding permission 'Permission object (3)'
Adding permission 'Permission object (4)'
Running post-migrate handlers for application auth
Adding content type 'auth | permission'
Adding content type 'auth | group'
Adding content type 'auth | user'
Adding permission 'Permission object (5)'
Adding permission 'Permission object (6)'
Adding permission 'Permission object (7)'
Adding permission 'Permission object (8)'
Adding permission 'Permission object (9)'
Adding permission 'Permission object (10)'
Adding permission 'Permission object (11)'
Adding permission 'Permission object (12)'
Adding permission 'Permission object (13)'
Adding permission 'Permission object (14)'
Adding permission 'Permission object (15)'
Adding permission 'Permission object (16)'
Running post-migrate handlers for application contenttypes
Adding content type 'contenttypes | contenttype'
Adding permission 'Permission object (17)'
Adding permission 'Permission object (18)'
Adding permission 'Permission object (19)'
Adding permission 'Permission object (20)'
Running post-migrate handlers for application sessions
Adding content type 'sessions | session'
Adding permission 'Permission object (21)'
Adding permission 'Permission object (22)'
Adding permission 'Permission object (23)'
Adding permission 'Permission object (24)'
Running post-migrate handlers for application blog
Adding content type 'blog | category'
Adding content type 'blog | location'
Adding content type 'blog | post'
Adding content type 'blog | comment'
Adding permission 'Permission object (25)'
Adding permission 'Permission object (26)'
Adding permission 'Permission object (27)'
Adding permission 'Permission object (28)'
Adding permission 'Permission object (29)'
Adding permission 'Permission object (30)'
Adding permission 'Permission object (31)'
Adding permission 'Permission object (32)'
Adding permission 'Permission object (33)'
Adding permission 'Permission object (34)'
Adding permission 'Permission object (35)'
Adding permission 'Permission object (36)'
Adding permission 'Permission object (37)'
Adding permission 'Permission object (38)'
Adding permission 'Permission object (39)'
Adding permission 'Permission object (40)'
PASSED
tests/test_content.py::TestContent::test_only_own_pubs_in_category PASSED
tests/test_content.py::TestContent::test_only_own_pubs_in_profile PASSED
tests/test_content.py::TestContent::test_unpublished_category PASSED
tests/test_content.py::TestContent::test_future_posts PASSED
tests/test_content.py::TestContent::test_pagination PASSED
tests/test_content.py::TestContent::test_image_visible PASSED
tests/test_err_pages.py::test_custom_err_handlers PASSED
tests/test_users.py::test_custom_err_handlers PASSED
tests/test_users.py::test_profile PASSED
tests/test_comment.py::test_comment_created_at PASSED
tests/test_comment.py::test_comment PASSED
tests/test_comment.py::test_404_on_comment_deleted_post PASSED
tests/test_post.py::test_post_created_at PASSED
tests/test_post.py::test_post FAILED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`post` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`author` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`text` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`created_at` field] <- tests\conftest.py PASSED
tests/test_comment.py::test_link_order_in_comment_template PASSED
tests/test_emails.py::test_gitignore PASSED
tests/test_emails.py::test_email_backend_settings PASSED
tests/test_err_pages.py::test_csrf_failure_view PASSED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`image` field] <- tests\conftest.py PASSED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`pub_date` field] <- tests\conftest.py PASSED
tests/test_static_pages.py::test_static_pages_as_cbv PASSED

================================== FAILURES ===================================
__________________________________ test_post __________________________________

published_category = <Category: Whether First Town S>
published_location = <Location: Lawrence Kelley>
user_client = <django.test.client.Client object at 0x05E26AB0>
another_user_client = <django.test.client.Client object at 0x05E73C30>
unlogged_client = <django.test.client.Client object at 0x05E737C8>
comment_to_a_post = <Comment: \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f kristincochran>
create_post_context_form_item = KeyVal(key='form', val=<PostEditForm bound=False, valid=False, fields=(is_published;title;text;pub_date;location;category;image)>)
PostModel = <class 'blog.models.Post'>
CommentModelAdapter = <class 'adapters.comment.CommentModelAdapter.<locals>._CommentModelAdapter'>
main_content_tester = <test_content.MainPostContentTester object at 0x05E944C8>

    @pytest.mark.django_db(transaction=True)
    def test_post(
            published_category: Model,
            published_location: Model,
            user_client: django.test.Client,
            another_user_client: django.test.Client,
            unlogged_client: django.test.Client,
            comment_to_a_post: Model,
            create_post_context_form_item: Tuple[str, BaseForm],
            PostModel: Type[Model],
            CommentModelAdapter: CommentModelAdapterT,
            main_content_tester: MainPostContentTester
    ):
        _, ctx_form = create_post_context_form_item
    
        create_a_post_get_response = get_create_a_post_get_response_safely(
            user_client
        )
    
        response_on_created, created_items = _test_create_items(
            PostModel,
            PostModelAdapter,
            another_user_client,
            create_a_post_get_response,
            ctx_form,
            published_category,
            published_location,
            unlogged_client,
            user_client,
        )
    
        # checking images are visible on post creation
        created_content = response_on_created.content.decode('utf-8')
        img_count = created_content.count('<img')
        expected_img_count = main_content_tester.n_or_page_size(len(created_items))
        assert img_count >= expected_img_count, (
            '\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u043d\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0441 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u043e\u0439.'
        )
    
        edit_response, edit_url, del_url = _test_edit_post(
            CommentModelAdapter,
            another_user_client,
            comment_to_a_post,
            unlogged_client=unlogged_client,
            user_client=user_client,
        )
    
        item_to_delete_adapter = PostModelAdapter(
            CommentModelAdapter(comment_to_a_post).post
        )
        del_url_addr = del_url.key
    
        del_unexisting_status_404_err_msg = (
            "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f "
            " \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u0442\u0443\u0441 404."
        )
        delete_tester = DeletePostTester(
            item_to_delete_adapter.item_cls,
            user_client,
            another_user_client,
            unlogged_client,
            item_adapter=item_to_delete_adapter,
        )
>       delete_tester.test_delete_item(
            qs=item_to_delete_adapter.item_cls.objects.all(),
            delete_url_addr=del_url_addr,
        )

tests\test_post.py:135: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <form.post.delete_tester.DeletePostTester object at 0x05E9ED38>
qs = <QuerySet [<Post: Test create post 100>, <Post: Test create post 100>, <Post: Test create post 100>, <Post: Test create post 100>, <Post: Benefit Must Edge Na>]>
delete_url_addr = '/posts/7/delete/', only_base_form = False

    def test_delete_item(
        self, qs: QuerySet, delete_url_addr: str, only_base_form: bool = False
    ) -> HttpResponse:
        instances_before: Set[Model] = set(qs.all())
    
        can_delete, response = self.user_can_delete(
            UnauthorizedSubmitTester(tester=self, test_response_cbk=None),
            delete_url_addr,
            self._item_adapter,
            qs=qs,
        )
        assert not can_delete, self.unauthenticated_user_error
    
        can_delete, response = self.user_can_delete(
            AnonymousSubmitTester(tester=self, test_response_cbk=None),
            delete_url_addr,
            self._item_adapter,
            qs=qs,
        )
        assert not can_delete, self.anonymous_user_error
    
        can_delete, response = self.user_can_delete(
            AuthorisedSubmitTester(
                tester=self,
                test_response_cbk=(
                    AuthorisedSubmitTester.get_test_response_ok_cbk(
                        tester=self
                    )
                ),
            ),
            delete_url_addr,
            self._item_adapter,
            qs=qs,
            only_base_form=only_base_form,
        )
>       assert can_delete, self.successful_delete_error
E       AssertionError: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u0442\u0430 \u044d\u0442\u043e\u0442 \u043f\u043e\u0441\u0442 \u043d\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u043e\u0441\u0442\u043e\u0432.

tests\form\delete_tester.py:100: AssertionError
======================== 1 failed, 25 passed in 1.64s =========================
