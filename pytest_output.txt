============================= test session starts =============================
platform win32 -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0 -- C:\Users\ogsvn\YandexDisk\.python\Dev\django-sprint4\venv\Scripts\python.exe
django: version: 5.1.1, settings: blogicum.settings (from ini)
rootdir: C:\Users\ogsvn\YandexDisk\.python\Dev\django-sprint4
configfile: pytest.ini
plugins: Faker-12.0.1, django-4.9.0
collecting ... collected 4 items

tests/test_post.py::test_post_created_at Operations to perform:
  Synchronize unmigrated apps: blog, django_bootstrap5, messages, pages, staticfiles
  Apply all migrations: admin, auth, contenttypes, sessions
Running pre-migrate handlers for application admin
Running pre-migrate handlers for application auth
Running pre-migrate handlers for application contenttypes
Running pre-migrate handlers for application sessions
Running pre-migrate handlers for application blog
Synchronizing apps without migrations:
  Creating tables...
    Creating table blog_category
    Creating table blog_location
    Creating table blog_post
    Creating table blog_comment
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK (0.000s)
  Applying auth.0001_initial... OK (0.016s)
  Applying admin.0001_initial... OK (0.015s)
  Applying admin.0002_logentry_remove_auto_add... OK (0.000s)
  Applying admin.0003_logentry_add_action_flag_choices... OK (0.000s)
  Applying contenttypes.0002_remove_content_type_name... OK (0.016s)
  Applying auth.0002_alter_permission_name_max_length... OK (0.015s)
  Applying auth.0003_alter_user_email_max_length... OK (0.000s)
  Applying auth.0004_alter_user_username_opts... OK (0.016s)
  Applying auth.0005_alter_user_last_login_null... OK (0.000s)
  Applying auth.0006_require_contenttypes_0002... OK (0.000s)
  Applying auth.0007_alter_validators_add_error_messages... OK (0.000s)
  Applying auth.0008_alter_user_username_max_length... OK (0.000s)
  Applying auth.0009_alter_user_last_name_max_length... OK (0.000s)
  Applying auth.0010_alter_group_name_max_length... OK (0.016s)
  Applying auth.0011_update_proxy_permissions... OK (0.015s)
  Applying auth.0012_alter_user_first_name_max_length... OK (0.000s)
  Applying sessions.0001_initial... OK (0.000s)
Running post-migrate handlers for application admin
Adding content type 'admin | logentry'
Adding permission 'Permission object (1)'
Adding permission 'Permission object (2)'
Adding permission 'Permission object (3)'
Adding permission 'Permission object (4)'
Running post-migrate handlers for application auth
Adding content type 'auth | permission'
Adding content type 'auth | group'
Adding content type 'auth | user'
Adding permission 'Permission object (5)'
Adding permission 'Permission object (6)'
Adding permission 'Permission object (7)'
Adding permission 'Permission object (8)'
Adding permission 'Permission object (9)'
Adding permission 'Permission object (10)'
Adding permission 'Permission object (11)'
Adding permission 'Permission object (12)'
Adding permission 'Permission object (13)'
Adding permission 'Permission object (14)'
Adding permission 'Permission object (15)'
Adding permission 'Permission object (16)'
Running post-migrate handlers for application contenttypes
Adding content type 'contenttypes | contenttype'
Adding permission 'Permission object (17)'
Adding permission 'Permission object (18)'
Adding permission 'Permission object (19)'
Adding permission 'Permission object (20)'
Running post-migrate handlers for application sessions
Adding content type 'sessions | session'
Adding permission 'Permission object (21)'
Adding permission 'Permission object (22)'
Adding permission 'Permission object (23)'
Adding permission 'Permission object (24)'
Running post-migrate handlers for application blog
Adding content type 'blog | category'
Adding content type 'blog | location'
Adding content type 'blog | post'
Adding content type 'blog | comment'
Adding permission 'Permission object (25)'
Adding permission 'Permission object (26)'
Adding permission 'Permission object (27)'
Adding permission 'Permission object (28)'
Adding permission 'Permission object (29)'
Adding permission 'Permission object (30)'
Adding permission 'Permission object (31)'
Adding permission 'Permission object (32)'
Adding permission 'Permission object (33)'
Adding permission 'Permission object (34)'
Adding permission 'Permission object (35)'
Adding permission 'Permission object (36)'
Adding permission 'Permission object (37)'
Adding permission 'Permission object (38)'
Adding permission 'Permission object (39)'
Adding permission 'Permission object (40)'
PASSED
tests/test_post.py::test_post FAILED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`image` field] <- tests\conftest.py PASSED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`pub_date` field] <- tests\conftest.py PASSED

================================== FAILURES ===================================
__________________________________ test_post __________________________________

self = <form.post.create_form_tester.CreatePostFormTester object at 0x05C92AC8>
forms = [<PostForm bound=True, valid=True, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>]
qs = <QuerySet [<Post: Data Tonight Reduce >]>

    def test_create_several(
        self, forms: Iterable[BaseForm], qs: QuerySet
    ) -> Tuple[HttpResponse, List[Model]]:
        created_items = []
        for form in forms:
            try:
>               response, created = self.test_create_item(
                    form,
                    qs,
                    AuthorisedSubmitTester(
                        self,
                        test_response_cbk=(
                            AuthorisedSubmitTester.get_test_response_ok_cbk(
                                tester=self
                            )
                        ),
                    ),
                    assert_created=True,
                )

tests\form\base_form_tester.py:294: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\form\base_form_tester.py:264: in test_create_item
    response, created = self.try_create_item(
tests\form\post\create_form_tester.py:77: in try_create_item
    return super().try_create_item(form, qs, submitter, assert_created)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <form.post.create_form_tester.CreatePostFormTester object at 0x05C92AC8>
form = <PostForm bound=True, valid=True, fields=(title;text;image;category;location;is_published;pub_date)>
qs = <QuerySet [<Post: Data Tonight Reduce >]>
submitter = <form.base_form_tester.AuthorisedSubmitTester object at 0x05D0FAA8>
assert_created = True

    def try_create_item(
        self,
        form: BaseForm,
        qs: QuerySet,
        submitter: SubmitTester,
        assert_created: bool = True,
    ) -> Tuple[HttpResponse, Model]:
        if not form.is_valid():
            raise FormValidationException(form.errors)
        elif form.errors:
            raise FormValidationException(form.errors)
    
        items_before = set(qs.all())
    
        restored_data = restore_cleaned_data(form.cleaned_data)
        try:
            response = submitter.test_submit(
                url=self._action, data=restored_data
            )
        except Exception as e:
            raise FormValidationException(e) from e
    
        items_after: Set[Model] = set(qs.all())
        created_items = items_after - items_before
        n_created = len(created_items)
        created = next(iter(created_items)) if created_items else None
    
        if assert_created:
            if not n_created:
>               raise ItemNotCreatedException()
E               conftest.ItemNotCreatedException

tests\form\base_form_tester.py:216: ItemNotCreatedException

During handling of the above exception, another exception occurred:

published_category = <Category: Positive Have With D>
published_location = <Location: Hayden Barnett>
user_client = <django.test.client.Client object at 0x05C64D68>
another_user_client = <django.test.client.Client object at 0x05C64E70>
unlogged_client = <django.test.client.Client object at 0x05C92618>
comment_to_a_post = <Comment: Crime usually father>
create_post_context_form_item = KeyVal(key='form', val=<PostForm bound=False, valid=False, fields=(title;text;image;category;location;is_published;pub_date)>)
PostModel = <class 'blog.models.Post'>
CommentModelAdapter = <class 'adapters.comment.CommentModelAdapter.<locals>._CommentModelAdapter'>
main_content_tester = <test_content.MainPostContentTester object at 0x05C92918>

    @pytest.mark.django_db(transaction=True)
    def test_post(
            published_category: Model,
            published_location: Model,
            user_client: django.test.Client,
            another_user_client: django.test.Client,
            unlogged_client: django.test.Client,
            comment_to_a_post: Model,
            create_post_context_form_item: Tuple[str, BaseForm],
            PostModel: Type[Model],
            CommentModelAdapter: CommentModelAdapterT,
            main_content_tester: MainPostContentTester
    ):
        _, ctx_form = create_post_context_form_item
    
        create_a_post_get_response = get_create_a_post_get_response_safely(
            user_client
        )
    
>       response_on_created, created_items = _test_create_items(
            PostModel,
            PostModelAdapter,
            another_user_client,
            create_a_post_get_response,
            ctx_form,
            published_category,
            published_location,
            unlogged_client,
            user_client,
        )

tests\test_post.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_post.py:308: in _test_create_items
    response_on_created, created_items = creation_tester.test_create_several(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <form.post.create_form_tester.CreatePostFormTester object at 0x05C92AC8>
forms = [<PostForm bound=True, valid=True, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>, <PostForm bound=True, valid=Unknown, fields=(title;text;image;category;location;is_published;pub_date)>]
qs = <QuerySet [<Post: Data Tonight Reduce >]>

    def test_create_several(
        self, forms: Iterable[BaseForm], qs: QuerySet
    ) -> Tuple[HttpResponse, List[Model]]:
        created_items = []
        for form in forms:
            try:
                response, created = self.test_create_item(
                    form,
                    qs,
                    AuthorisedSubmitTester(
                        self,
                        test_response_cbk=(
                            AuthorisedSubmitTester.get_test_response_ok_cbk(
                                tester=self
                            )
                        ),
                    ),
                    assert_created=True,
                )
            except ItemNotCreatedException:
>               raise AssertionError(self.item_not_created_assertion_msg)
E               AssertionError: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0444\u043e\u0440\u043c\u044b \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0441\u0442\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0437\u0434\u0430\u0451\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u0441\u0442\u0430.

tests\form\base_form_tester.py:308: AssertionError
========================= 1 failed, 3 passed in 0.66s =========================
