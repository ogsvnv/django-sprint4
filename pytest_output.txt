============================= test session starts =============================
platform win32 -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0 -- C:\Users\ogsvn\YandexDisk\.python\Dev\django-sprint4\venv\Scripts\python.exe
django: version: 5.1.1, settings: blogicum.settings (from ini)
rootdir: C:\Users\ogsvn\YandexDisk\.python\Dev\django-sprint4
configfile: pytest.ini
testpaths: tests/
plugins: Faker-12.0.1, django-4.9.0
collecting ... collected 26 items

tests/test_content.py::TestContent::test_unpublished Operations to perform:
  Synchronize unmigrated apps: django_bootstrap5, messages, pages, staticfiles
  Apply all migrations: admin, auth, blog, contenttypes, sessions
Running pre-migrate handlers for application admin
Running pre-migrate handlers for application auth
Running pre-migrate handlers for application contenttypes
Running pre-migrate handlers for application sessions
Running pre-migrate handlers for application blog
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK (0.000s)
  Applying auth.0001_initial... OK (0.016s)
  Applying admin.0001_initial... OK (0.000s)
  Applying admin.0002_logentry_remove_auto_add... OK (0.000s)
  Applying admin.0003_logentry_add_action_flag_choices... OK (0.015s)
  Applying contenttypes.0002_remove_content_type_name... OK (0.000s)
  Applying auth.0002_alter_permission_name_max_length... OK (0.016s)
  Applying auth.0003_alter_user_email_max_length... OK (0.000s)
  Applying auth.0004_alter_user_username_opts... OK (0.016s)
  Applying auth.0005_alter_user_last_login_null... OK (0.000s)
  Applying auth.0006_require_contenttypes_0002... OK (0.000s)
  Applying auth.0007_alter_validators_add_error_messages... OK (0.000s)
  Applying auth.0008_alter_user_username_max_length... OK (0.015s)
  Applying auth.0009_alter_user_last_name_max_length... OK (0.000s)
  Applying auth.0010_alter_group_name_max_length... OK (0.016s)
  Applying auth.0011_update_proxy_permissions... OK (0.000s)
  Applying auth.0012_alter_user_first_name_max_length... OK (0.015s)
  Applying blog.0001_initial... OK (0.000s)
  Applying blog.0002_alter_category_options_alter_location_options_and_more... OK (0.063s)
  Applying blog.0003_post_image... OK (0.016s)
  Applying blog.0004_comment... OK (0.000s)
  Applying blog.0005_comment_active... OK (0.015s)
  Applying sessions.0001_initial... OK (0.000s)
Running post-migrate handlers for application admin
Adding content type 'admin | logentry'
Adding permission 'Permission object (1)'
Adding permission 'Permission object (2)'
Adding permission 'Permission object (3)'
Adding permission 'Permission object (4)'
Running post-migrate handlers for application auth
Adding content type 'auth | permission'
Adding content type 'auth | group'
Adding content type 'auth | user'
Adding permission 'Permission object (5)'
Adding permission 'Permission object (6)'
Adding permission 'Permission object (7)'
Adding permission 'Permission object (8)'
Adding permission 'Permission object (9)'
Adding permission 'Permission object (10)'
Adding permission 'Permission object (11)'
Adding permission 'Permission object (12)'
Adding permission 'Permission object (13)'
Adding permission 'Permission object (14)'
Adding permission 'Permission object (15)'
Adding permission 'Permission object (16)'
Running post-migrate handlers for application contenttypes
Adding content type 'contenttypes | contenttype'
Adding permission 'Permission object (17)'
Adding permission 'Permission object (18)'
Adding permission 'Permission object (19)'
Adding permission 'Permission object (20)'
Running post-migrate handlers for application sessions
Adding content type 'sessions | session'
Adding permission 'Permission object (21)'
Adding permission 'Permission object (22)'
Adding permission 'Permission object (23)'
Adding permission 'Permission object (24)'
Running post-migrate handlers for application blog
Adding content type 'blog | category'
Adding content type 'blog | location'
Adding content type 'blog | post'
Adding content type 'blog | comment'
Adding permission 'Permission object (25)'
Adding permission 'Permission object (26)'
Adding permission 'Permission object (27)'
Adding permission 'Permission object (28)'
Adding permission 'Permission object (29)'
Adding permission 'Permission object (30)'
Adding permission 'Permission object (31)'
Adding permission 'Permission object (32)'
Adding permission 'Permission object (33)'
Adding permission 'Permission object (34)'
Adding permission 'Permission object (35)'
Adding permission 'Permission object (36)'
Adding permission 'Permission object (37)'
Adding permission 'Permission object (38)'
Adding permission 'Permission object (39)'
Adding permission 'Permission object (40)'
PASSED
tests/test_content.py::TestContent::test_only_own_pubs_in_category PASSED
tests/test_content.py::TestContent::test_only_own_pubs_in_profile PASSED
tests/test_content.py::TestContent::test_unpublished_category PASSED
tests/test_content.py::TestContent::test_future_posts PASSED
tests/test_content.py::TestContent::test_pagination PASSED
tests/test_content.py::TestContent::test_image_visible PASSED
tests/test_err_pages.py::test_custom_err_handlers PASSED
tests/test_users.py::test_custom_err_handlers PASSED
tests/test_users.py::test_profile FAILED
tests/test_comment.py::test_comment_created_at PASSED
tests/test_comment.py::test_comment PASSED
tests/test_comment.py::test_404_on_comment_deleted_post PASSED
tests/test_post.py::test_post_created_at PASSED
tests/test_post.py::test_post PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`post` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`author` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`text` field] <- tests\conftest.py PASSED
tests/test_comment.py::TestCommentModelAttrs::test_model_attrs[`created_at` field] <- tests\conftest.py PASSED
tests/test_comment.py::test_link_order_in_comment_template PASSED
tests/test_emails.py::test_gitignore PASSED
tests/test_emails.py::test_email_backend_settings PASSED
tests/test_err_pages.py::test_csrf_failure_view PASSED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`image` field] <- tests\conftest.py PASSED
tests/test_post.py::TestPostModelAttrs::test_model_attrs[`pub_date` field] <- tests\conftest.py PASSED
tests/test_static_pages.py::test_static_pages_as_cbv PASSED

================================== FAILURES ===================================
________________________________ test_profile _________________________________

user = <User: clementsdebbie>, another_user = <User: gonzalezautumn>
user_client = <django.test.client.Client object at 0x0584A360>
another_user_client = <django.test.client.Client object at 0x04E3EA50>
unlogged_client = <django.test.client.Client object at 0x04E3E870>

    @pytest.mark.django_db
    def test_profile(
            user, another_user, user_client, another_user_client, unlogged_client
    ):
        user_url = f"/profile/{user.username}/"
        printed_url = "/profile/<username>/"
    
        User = get_user_model()
        status_code_not_404_err_msg = (
            "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e "
            "\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u0442\u0443\u0441 404."
        )
        try:
            response = user_client.get("/profile/this_is_unexisting_user_name/")
        except User.DoesNotExist:
            raise AssertionError(status_code_not_404_err_msg)
    
        assert response.status_code == HTTPStatus.NOT_FOUND, (
            status_code_not_404_err_msg)
    
        user_response: HttpResponse = user_client.get(user_url)
    
        user_content = user_response.content.decode("utf-8")
    
        anothers_same_page_response: HttpResponse = another_user_client.get(
            user_url
        )
        anothers_same_page_content = anothers_same_page_response.content.decode(
            "utf-8"
        )
    
        unlogged_same_page_response: HttpResponse = unlogged_client.get(user_url)
        unlogged_same_page_content = unlogged_same_page_response.content.decode(
            "utf-8"
        )
    
        for profile_user, profile_user_content in (
                (user, user_content),
                (user, unlogged_same_page_content),
                (user, anothers_same_page_content),
        ):
            _test_user_info_displayed(
                profile_user, profile_user_content, printed_url
            )
    
        try:
            edit_url, change_pwd_url = try_get_profile_manage_urls(
                user_content, anothers_same_page_content, ignore_urls={user_url}
            )
        except ManageProfileLinksException:
            raise AssertionError(
                "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u0441\u044b\u043b\u043a\u0438 \u0434\u043b\u044f"
                " \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f \u0432\u0438\u0434\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443"
                " \u043f\u0440\u043e\u0444\u0438\u043b\u044f, \u043d\u043e \u043d\u0435 \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c."
            )
    
        unlogged_diff_urls = get_extra_urls(
            base_content=unlogged_same_page_content, extra_content=user_content
        )
    
        assert {edit_url, change_pwd_url}.issubset(set(unlogged_diff_urls)), (
            "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0435\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0441\u0441\u044b\u043b\u043a\u0438"
            " \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f."
        )
    
        item_to_edit = user
        item_to_edit_adapter = UserModelAdapter(item_to_edit)
        old_prop_value = item_to_edit_adapter.displayed_field_name_or_value
        update_props = {
            item_to_edit_adapter.item_cls_adapter.displayed_field_name_or_value: (
                f"{old_prop_value} edited"
            )
        }
>       _test_edit(
            KeyVal(edit_url, edit_url),
            UserModelAdapter,
            user,
            EditFormTester=EditUserFormTester,
            user_client=user_client,
            unlogged_client=unlogged_client,
            **update_props,
        )

tests\test_users.py:167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_edit.py:46: in _test_edit
    updated_form = create_updated_form(**update_props)
tests\test_edit.py:38: in create_updated_form
    return EditFormTester.init_create_form_from_item(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

item = <User: clementsdebbie>, Form = <class 'NoneType'>
ModelAdapter = <class 'adapters.user.UserModelAdapter'>, file_data = None
update_form_data = {'last_name': 'Robertson edited'}

    @staticmethod
    def init_create_form_from_item(
        item: Model,
        Form: Type[BaseForm],
        ModelAdapter: ModelAdapterT,
        file_data: Optional[Dict[str, SimpleUploadedFile]],
        **update_form_data,
    ) -> BaseForm:
>       form = Form(instance=item)
E       TypeError: NoneType takes no arguments

tests\form\base_form_tester.py:327: TypeError
======================== 1 failed, 25 passed in 1.96s =========================
